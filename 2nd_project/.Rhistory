repel = TRUE,
title = "Factor Analysis - graph of variables")
}
# Plot
plot_loadings(data.frame(fc2$loadings[,1:2]), names(df2))
# libraries
library(smacof)
library(magrittr)
library(dplyr)
library(ggpubr)
library(MASS)
# seed
set.seed(123)
## Read data frame
df = readRDS("./data/gc.dat")
# correlation matrix
df_cor = cor(df)
# dissimilarities
dissim = sim2diss(df_cor, method = "corr", to.dist = TRUE)
mds = #(1 - df_cor) %>%
dissim %>%
cmdscale() #classical MDS
mds
summary(mds)
mds.tb = mds %>%
as_tibble()
colnames(mds.tb) = c("Dim.1", "Dim.2")
ggscatter(mds.tb, x = "Dim.1", y = "Dim.2",
size = 1,
label = colnames(df_cor),
repel = TRUE)
# K-means clustering
clust = kmeans(mds.tb, 2)$cluster %>%
as.factor()
mds.clust = mds.tb %>%
mutate(groups = clust)
# Plot and color by groups
g = ggscatter(mds.clust, x = "Dim.1", y = "Dim.2",
label = rownames(df_cor),
color = "groups",
palette = "jco",
size = 1,
ellipse = TRUE,
ellipse.type = "convex",
repel = TRUE,
title = "Classical MDS")
g
ggscatter(mds.tb, x = "Dim.1", y = "Dim.2",
size = 1,
label = colnames(df_cor),
repel = TRUE)
mds
summary(mds)
heatmap(df_cor)
View(df)
plot(df[19,])
plot(df[19,])
plot(df[19,c(1,2)])
plot(df[19,1],df[19,1])
plot(df[19,1],df[19,2])
df[19,1]
plot(x=df[19,1],y=df[19,2])
df[19,2]
ggplot(df[c(5,6,13,19,22),], aes(x=gal.long, y=gal.lat))
+ geom_point()
ggplot(df[c(5,6,13,19,22),], aes(x=gal.long, y=gal.lat)) + geom_point()
df[c(5,6,13,19,22),]
heatmap(df[c(5,6,13,19,22),])
heatmap(cor(df[c(5,6,13,19,22),]))
# correlation matrix
#df_cor = cor(df)
df_cor = cor(df[c(5,6,13,19,22),])
# dissimilarities
dissim = sim2diss(df_cor, method = "corr", to.dist = TRUE)
mds = #(1 - df_cor) %>%
dissim %>%
cmdscale() #classical MDS
mds
summary(mds)
mds.tb = mds %>%
as_tibble()
colnames(mds.tb) = c("Dim.1", "Dim.2")
ggscatter(mds.tb, x = "Dim.1", y = "Dim.2",
size = 1,
label = colnames(df_cor),
repel = TRUE)
# correlation matrix
#df_cor = cor(df)
df_cor = cor(df[c(5),])
# dissimilarities
dissim = sim2diss(df_cor, method = "corr", to.dist = TRUE)
mds = #(1 - df_cor) %>%
dissim %>%
cmdscale() #classical MDS
mds
summary(mds)
mds.tb = mds %>%
as_tibble()
colnames(mds.tb) = c("Dim.1", "Dim.2")
ggscatter(mds.tb, x = "Dim.1", y = "Dim.2",
size = 1,
label = colnames(df_cor),
repel = TRUE)
# K-means clustering
clust = kmeans(mds.tb, 2)$cluster %>%
as.factor()
mds.clust = mds.tb %>%
mutate(groups = clust)
# Plot and color by groups
g = ggscatter(mds.clust, x = "Dim.1", y = "Dim.2",
label = rownames(df_cor),
color = "groups",
palette = "jco",
size = 1,
ellipse = TRUE,
ellipse.type = "convex",
repel = TRUE,
title = "Classical MDS")
g
df_cor = cor(df)
# dissimilarities
dissim = sim2diss(df_cor, method = "corr", to.dist = TRUE)
mds = #(1 - df_cor) %>%
dissim %>%
cmdscale() #classical MDS
mds
summary(mds)
mds.tb = mds %>%
as_tibble()
colnames(mds.tb) = c("Dim.1", "Dim.2")
ggscatter(mds.tb, x = "Dim.1", y = "Dim.2",
size = 1,
label = colnames(df_cor),
repel = TRUE)
# K-means clustering
clust = kmeans(mds.tb, 2)$cluster %>%
as.factor()
mds.clust = mds.tb %>%
mutate(groups = clust)
# Plot and color by groups
g = ggscatter(mds.clust, x = "Dim.1", y = "Dim.2",
label = rownames(df_cor),
color = "groups",
palette = "jco",
size = 1,
ellipse = TRUE,
ellipse.type = "convex",
repel = TRUE,
title = "Classical MDS")
g
plot(mds, plot.type = "bubbleplot")
df = readRDS("./data/location.dat")
# correlation matrix
df_cor = cor(df)
# dissimilarities
dissim = sim2diss(df_cor, method = "corr", to.dist = TRUE)
mds = #(1 - df_cor) %>%
dissim %>%
cmdscale() #classical MDS
mds
summary(mds)
mds.tb = mds %>%
as_tibble()
colnames(mds.tb) = c("Dim.1", "Dim.2")
ggscatter(mds.tb, x = "Dim.1", y = "Dim.2",
size = 1,
label = colnames(df_cor),
repel = TRUE)
plot(mds, plot.type = "bubbleplot")
# correlation matrix
df_cor = cor(df)
# K-means clustering
clust = kmeans(mds.tb, 2)$cluster %>%
as.factor()
mds.clust = mds.tb %>%
mutate(groups = clust)
# Plot and color by groups
g = ggscatter(mds.clust, x = "Dim.1", y = "Dim.2",
label = rownames(df_cor),
color = "groups",
palette = "jco",
size = 1,
ellipse = TRUE,
ellipse.type = "convex",
repel = TRUE,
title = "Classical MDS")
g
df = readRDS("./data/dynamics.dat")
# correlation matrix
df_cor = cor(df)
# dissimilarities
dissim = sim2diss(df_cor, method = "corr", to.dist = TRUE)
mds = #(1 - df_cor) %>%
dissim %>%
cmdscale() #classical MDS
mds
summary(mds)
mds.tb = mds %>%
as_tibble()
colnames(mds.tb) = c("Dim.1", "Dim.2")
ggscatter(mds.tb, x = "Dim.1", y = "Dim.2",
size = 1,
label = colnames(df_cor),
repel = TRUE)
# K-means clustering
clust = kmeans(mds.tb, 2)$cluster %>%
as.factor()
mds.clust = mds.tb %>%
mutate(groups = clust)
# Plot and color by groups
g = ggscatter(mds.clust, x = "Dim.1", y = "Dim.2",
label = rownames(df_cor),
color = "groups",
palette = "jco",
size = 1,
ellipse = TRUE,
ellipse.type = "convex",
repel = TRUE,
title = "Classical MDS")
g
df = readRDS("./data/location.dat")
# correlation matrix
df_cor = cor(df)
# dissimilarities
dissim = sim2diss(df_cor, method = "corr", to.dist = TRUE)
mds = #(1 - df_cor) %>%
dissim %>%
cmdscale() #classical MDS
mds
summary(mds)
mds.tb = mds %>%
as_tibble()
colnames(mds.tb) = c("Dim.1", "Dim.2")
ggscatter(mds.tb, x = "Dim.1", y = "Dim.2",
size = 1,
label = colnames(df_cor),
repel = TRUE)
ggscatter(mds.tb, x = "Dim.1", y = "Dim.2",
size = 1,
label = colnames(df_cor),
repel = TRUE,
title = "Classical MDS - localization data set")
## Read data frame
#df = readRDS("./data/gc.dat")
#df = readRDS("./data/location.dat")
df = readRDS("./data/dynamics.dat")
# correlation matrix
df_cor = cor(df)
# dissimilarities
dissim = sim2diss(df_cor, method = "corr", to.dist = TRUE)
mds = #(1 - df_cor) %>%
dissim %>%
cmdscale() #classical MDS
mds
summary(mds)
mds.tb = mds %>%
as_tibble()
colnames(mds.tb) = c("Dim.1", "Dim.2")
ggscatter(mds.tb, x = "Dim.1", y = "Dim.2",
size = 1,
label = colnames(df_cor),
repel = TRUE,
title = "Classical MDS - localization data set")
ggscatter(mds.tb, x = "Dim.1", y = "Dim.2",
size = 1,
label = colnames(df_cor),
repel = TRUE,
title = "Classical MDS - dynamics data set")
# libraries
library(psych)
#library(FactoMineR)
#library(car)
library(ggplot2)
# seed
set.seed(123)
plot_loadings = function(l, label){
# par(mfrow=c(1,2))
# plot(l)
# plot(l, type="n")
# text(l, labels=label, cex=0.7)
names(l) = c("RC1", "RC2")
ggscatter(l, x = "RC1", y = "RC2",
size = 1,
label = label,
repel = TRUE,
title = "Factor Analysis - graph of variables")
}
df = readRDS("./data/location.dat")
df_cor = cor(df)
ggcorr(df, geom = "blank", label = TRUE, hjust = 0.67, size=2.5) +
geom_point(size = 10, aes(color = coefficient > 0, alpha = abs(coefficient) > 0.5)) +
scale_alpha_manual(values = c("TRUE" = 0.25, "FALSE" = 0)) +
guides(color = FALSE, alpha = FALSE)
library(GGally) # ggcorr
ggcorr(df, geom = "blank", label = TRUE, hjust = 0.67, size=2.5) +
geom_point(size = 10, aes(color = coefficient > 0, alpha = abs(coefficient) > 0.5)) +
scale_alpha_manual(values = c("TRUE" = 0.25, "FALSE" = 0)) +
guides(color = FALSE, alpha = FALSE)
df = readRDS("./data/dynamics.dat")
ggcorr(df, geom = "blank", label = TRUE, hjust = 0.67, size=2.5) +
geom_point(size = 10, aes(color = coefficient > 0, alpha = abs(coefficient) > 0.5)) +
scale_alpha_manual(values = c("TRUE" = 0.25, "FALSE" = 0)) +
guides(color = FALSE, alpha = FALSE)
df_cor = cor(df)
KMO(df_cor)
# Complete model
pca = PCA(df)
pca$eig
library(FactoMineR)
# Complete model
pca = PCA(df)
pca$eig
# Factor analysis from 4 PCA, so with 4 comon factors
fc = principal(df_cor, 4, rotate="varimax")
# Comunalities
fc$communality
# Loadings
# They are not the PC, but the rotated PC (RC)
fc$loadings
print(fc$loadings,cutoff = 0.6)
# Residuals
fc
# Plot
plot_loadings(data.frame(fc$loadings[,1:2]), names(df))
library(GGally) # ggcorr
plot_loadings = function(l, label){
names(l) = c("RC1", "RC2")
ggscatter(l, x = "RC1", y = "RC2",
size = 1,
label = label,
repel = TRUE,
title = "Factor Analysis - graph of variables")
}
# Plot
plot_loadings(data.frame(fc$loadings[,1:2]), names(df))
library(gridExtra)
# Plot
plot_loadings(data.frame(fc$loadings[,1:2]), names(df))
library(ggrepel)
# Plot
plot_loadings(data.frame(fc$loadings[,1:2]), names(df))
library(car)
# Plot
plot_loadings(data.frame(fc$loadings[,1:2]), names(df))
library(ggpubr)
# Plot
plot_loadings(data.frame(fc$loadings[,1:2]), names(df))
# Residuals
fc
df = readRDS("./data/location.dat")
ggcorr(df, geom = "blank", label = TRUE, hjust = 0.67, size=2.5) +
geom_point(size = 10, aes(color = coefficient > 0, alpha = abs(coefficient) > 0.5)) +
scale_alpha_manual(values = c("TRUE" = 0.25, "FALSE" = 0)) +
guides(color = FALSE, alpha = FALSE)
# libraries
library(psych)
library(FactoMineR)
#library(car)
library(ggplot2)
library(GGally) # ggcorr
library(ggpubr)
# seed
set.seed(123)
plot_loadings = function(l, label){
names(l) = c("RC1", "RC2")
ggscatter(l, x = "RC1", y = "RC2",
size = 1,
label = label,
repel = TRUE,
title = "Factor Analysis - graph of variables")
}
df = readRDS("./data/location.dat")
ggcorr(df, geom = "blank", label = TRUE, hjust = 0.67, size=2.5) +
geom_point(size = 10, aes(color = coefficient > 0, alpha = abs(coefficient) > 0.5)) +
scale_alpha_manual(values = c("TRUE" = 0.25, "FALSE" = 0)) +
guides(color = FALSE, alpha = FALSE)
KMO(df_cor)
df_cor = cor(df)
KMO(df_cor)
df = readRDS("./data/dynamics.dat")
ggcorr(df, geom = "blank", label = TRUE, hjust = 0.67, size=2.5) +
geom_point(size = 10, aes(color = coefficient > 0, alpha = abs(coefficient) > 0.5)) +
scale_alpha_manual(values = c("TRUE" = 0.25, "FALSE" = 0)) +
guides(color = FALSE, alpha = FALSE)
## Read data frame
#df = readRDS("./data/gc.dat")
#df = readRDS("./data/location.dat")
df = readRDS("./data/dynamics.dat")
# correlation matrix
df_cor = cor(df)
# dissimilarities
dissim = sim2diss(df_cor, method = "corr", to.dist = TRUE)
mds = #(1 - df_cor) %>%
dissim %>%
cmdscale() #classical MDS
mds
summary(mds)
mds.tb = mds %>%
as_tibble()
colnames(mds.tb) = c("Dim.1", "Dim.2")
ggscatter(mds.tb, x = "Dim.1", y = "Dim.2",
size = 1,
label = colnames(df_cor),
repel = TRUE,
title = "Classical MDS - dynamics data set")
# libraries
library(smacof)
library(magrittr)
library(dplyr)
library(ggpubr)
library(MASS)
# seed
set.seed(123)
## Read data frame
#df = readRDS("./data/gc.dat")
#df = readRDS("./data/location.dat")
df = readRDS("./data/dynamics.dat")
# correlation matrix
df_cor = cor(df)
# dissimilarities
dissim = sim2diss(df_cor, method = "corr", to.dist = TRUE)
mds = #(1 - df_cor) %>%
dissim %>%
cmdscale() #classical MDS
mds
summary(mds)
mds.tb = mds %>%
as_tibble()
colnames(mds.tb) = c("Dim.1", "Dim.2")
ggscatter(mds.tb, x = "Dim.1", y = "Dim.2",
size = 1,
label = colnames(df_cor),
repel = TRUE,
title = "Classical MDS - dynamics data set")
# libraries
library(psych)
library(FactoMineR)
#library(car)
library(ggplot2)
library(GGally) # ggcorr
library(ggpubr)
# seed
set.seed(123)
plot_loadings = function(l, label){
names(l) = c("RC1", "RC2")
ggscatter(l, x = "RC1", y = "RC2",
size = 1,
label = label,
repel = TRUE,
title = "Factor Analysis - graph of variables")
}
df = readRDS("./data/location.dat")
ggcorr(df, geom = "blank", label = TRUE, hjust = 0.67, size=2.5) +
geom_point(size = 10, aes(color = coefficient > 0, alpha = abs(coefficient) > 0.5)) +
scale_alpha_manual(values = c("TRUE" = 0.25, "FALSE" = 0)) +
guides(color = FALSE, alpha = FALSE)
df = readRDS("./data/dynamics.dat")
ggcorr(df, geom = "blank", label = TRUE, hjust = 0.67, size=2.5) +
geom_point(size = 10, aes(color = coefficient > 0, alpha = abs(coefficient) > 0.5)) +
scale_alpha_manual(values = c("TRUE" = 0.25, "FALSE" = 0)) +
guides(color = FALSE, alpha = FALSE)
ggsave("fa_dyn_correlations.png")
df_cor = cor(df)
KMO(df_cor)
# Complete model
pca = PCA(df)
pca$eig
pca$eig
# Factor analysis from 4 PCA, so with 4 comon factors
fc = principal(df_cor, 4, rotate="varimax")
# Comunalities
fc$communality
# Loadings
# They are not the PC, but the rotated PC (RC)
fc$loadings
print(fc$loadings,cutoff = 0.6)
# Residuals
fc
# Plot
plot_loadings(data.frame(fc$loadings[,1:2]), names(df))
print(fc$loadings,cutoff = 0.6)
# Residuals
fc
# libraries
library(smacof)
library(magrittr)
library(dplyr)
library(ggpubr)
library(MASS)
# seed
set.seed(123)
## Read data frame
#df = readRDS("./data/gc.dat")
#df = readRDS("./data/location.dat")
df = readRDS("./data/dynamics.dat")
# correlation matrix
df_cor = cor(df)
# dissimilarities
dissim = sim2diss(df_cor, method = "corr", to.dist = TRUE)
mds = #(1 - df_cor) %>%
dissim %>%
cmdscale() #classical MDS
mds
summary(mds)
mds.tb = mds %>%
as_tibble()
colnames(mds.tb) = c("Dim.1", "Dim.2")
ggscatter(mds.tb, x = "Dim.1", y = "Dim.2",
size = 1,
label = colnames(df_cor),
repel = TRUE,
title = "Classical MDS - dynamics data set")
