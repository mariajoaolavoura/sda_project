fc$communality
fc$loadings
fc$residual
# KMO of corr
df_cor = cor(df)
KMO(df_cor)
## Read data frame
df = readRDS("./data/gc.dat")
View(df)
# KMO of corr
df_cor = cor(df)
KMO(df_cor)
# libraries
library(psych)
library(FactoMineR)
library(car)
# seed
set.seed(123)
## Read data frame
df = readRDS("./data/gc.dat")
# KMO of corr
df_cor = cor(df)
KMO(df_cor)
dim(df)
# Factor analysis from PCA
fc = principal(df_cor, 11, rotate="varimax")
fc$communality
fc$loadings
fc$communality
mean(fc$communality)
fc$loadings
fc$loadings
pca = PCA(df)
pca$eig
# Factor analysis from 5 PCA, so with 5 comon factors
fc = principal(df_cor, 5, rotate="varimax")
# Comunalities
fc$communality
## easier to see the "elbow"
#png("loc_eigen_barplot.png")
barplot(pca$eig[,1],
main="Eigenvalues",
names.arg=1:nrow(pca$eig))
# Comunalities
fc$communality
# Loadings
# They are not the PC, but the rotated PC (RC)
fc$loadings
sum(0.209 0.190 0.181 0.164 0.075)
sum(0.209, 0.190, 0.181, 0.164, 0.075)
pca$eig
# Loadings
# They are not the PC, but the rotated PC (RC)
fc$loadings
# Residuals
fc$residual
KMO(df_cor)
df
df[,c(2,56,14,15,16,17,18)]
df[,c(2,5,6,14,15,16,17,18)]
s_df = df[,-c(2,5,6,14,15,16,17,18)]
# Complete model
pca = PCA(s_df)
# Complete model
s_pca = PCA(s_df)
s_pca$eig
s_df = df[,-c(2,5,6,14,15,16,17,18)]
s_df_cor = cor(s_df)
KMO()
KMO(s_df_cor)
# Complete model
s_pca = PCA(s_df)
s_pca$eig
# Factor analysis from 5 PCA, so with 5 comon factors
fc = principal(s_df_cor, 3, rotate="varimax")
# Factor analysis from 5 PCA, so with 5 comon factors
s_fc = principal(s_df_cor, 3, rotate="varimax")
# Factor analysis from 5 PCA, so with 5 comon factors
s_fc = principal(s_df_cor, 3, rotate="varimax")
# Comunalities
s_fc$communality
# Loadings
# They are not the PC, but the rotated PC (RC)
s_fc$loadings
# Residuals
s_fc$residual
# seed
set.seed(123)
## Read data frame
df = readRDS("./data/gc.dat")
# KMO of corr
df_cor = cor(df)
KMO(df_cor)
# Complete model
pca = PCA(df)
pca$eig
# Factor analysis from 5 PCA, so with 5 comon factors
fc = principal(df_cor, 5, rotate="varimax")
# Comunalities
fc$communality
# Loadings
# They are not the PC, but the rotated PC (RC)
fc$loadings
# Factor analysis from 5 PCA, so with 5 comon factors
fc = principal(df_cor, 5, rotate="varimax")
# Comunalities
fc$communality
# Loadings
# They are not the PC, but the rotated PC (RC)
fc$loadings
# Residuals
fc$residual
# Loadings
# They are not the PC, but the rotated PC (RC)
fc$loadings
install.packages(c("cowplot", "GGally", "latex2exp", "tidyverse"))
install.packages(c("GGally", "tidyverse"))
# seed
set.seed(123)
## Read data frame
df = readRDS("./data/gc.dat")
# KMO of corr
df_cor = cor(df)
# libraries
library(smacof)
install.packages("smacof")
data(crimes)
# libraries
library(smacof)
data(crimes)
View(crimes)
df_cor
# seed
set.seed(123)
## Read data frame
df = readRDS("./data/gc.dat")
# correlation matrix
df_cor = cor(df)
# dissimilarities
dissim = sim2diss(df_cor, method = "corr", to.dist = TRUE)
# Scaled MDS
df_rat_mds = mds(dissim,type="ratio")
summary(df_rat_mds)
# Scaled MDS
df_rat_mds = mds(dissim,type="ratio")
summary(df_rat_mds)
plot(df_rat_mds, plot.type = "bubbleplot")
# Scaled MDS
df_ord_mds = mds(dissim, type="ordinal")
summary(df_ord_mds)
plot(df_ord_mds, plot.type = "bubbleplot")
?kmeans
summary(df_rat_mds)
plot(df_ord_mds, plot.type = "bubbleplot")
# libraries
library(smacof)
# seed
set.seed(123)
## Read data frame
df = readRDS("./data/gc.dat")
# correlation matrix
df_cor = cor(df)
# dissimilarities
dissim = sim2diss(df_cor, method = "corr", to.dist = TRUE)
# Scaled MDS - ratio
df_rat_mds = mds(dissim,type="ratio")
summary(df_rat_mds)
plot(df_rat_mds, plot.type = "bubbleplot")
plot(df_ord_mds, plot.type = "bubbleplot")
clust <- kmeans(df_rat_mds, 3)$cluster %>%
as.factor()
library(dplyr)
clust <- kmeans(df_rat_mds, 3)$cluster %>%
as.factor()
clust <- kmeans(as.tibble(df_rat_mds), 3)$cluster %>%
as.factor()
clust <- kmeans(as_tibble(df_rat_mds), 3)$cluster %>%
as.factor()
ggscatter(df_rat_mds, x = "Dim.1", y = "Dim.2",
size = 1,
label = colnames(res.cor),
repel = TRUE)
library(ggpubr)
install.packages("ggpubr")
library(ggpubr)
ggscatter(df_rat_mds, x = "Dim.1", y = "Dim.2",
size = 1,
label = colnames(res.cor),
repel = TRUE)
ggscatter(df_rat_mds, x = "Dim.1", y = "Dim.2",
size = 1,
label = colnames(df_cor),
repel = TRUE)
colnames(df_rat_mds)
colnames(df_rat_mds) <- c("Dim.1", "Dim.2")
ggscatter(df_rat_mds, x = "Dim.1", y = "Dim.2",
size = 1,
label = colnames(df_cor),
repel = TRUE)
df_rat_mds
# Scaled MDS - ratio
df_rat_mds = mds(dissim,type="ratio")
summary(df_rat_mds)
plot(df_rat_mds, plot.type = "bubbleplot")
mds_tibble = as_tibble(df_rat_mds)
library(magrittr)
library(dplyr)
library(ggpubr)
mds.cor <- (1 - df_cor) %>%
cmdscale() %>%
as_tibble()
colnames(mds.cor) <- c("Dim.1", "Dim.2")
ggscatter(mds.cor, x = "Dim.1", y = "Dim.2",
size = 1,
label = colnames(res.cor),
repel = TRUE)
ggscatter(mds.cor, x = "Dim.1", y = "Dim.2",
size = 1,
label = colnames(df_cor),
repel = TRUE)
mds.cor <- (1 - df_cor) %>%
#cmdscale() %>% #classical MDS
isoMDS() %>%
as_tibble()
library(MASS)
mds.cor <- (1 - df_cor) %>%
#cmdscale() %>% #classical MDS
isoMDS() %>%
as_tibble()
colnames(mds.cor) <- c("Dim.1", "Dim.2")
ggscatter(mds.cor, x = "Dim.1", y = "Dim.2",
size = 1,
label = colnames(df_cor),
repel = TRUE)
mds.cor
mds.cor <- (1 - df_cor) %>%
#cmdscale() %>% #classical MDS
isoMDS() %>%
.$points %>%
as_tibble()
colnames(mds.cor) <- c("Dim.1", "Dim.2")
ggscatter(mds.cor, x = "Dim.1", y = "Dim.2",
size = 1,
label = colnames(df_cor),
repel = TRUE)
plot(df_rat_mds, plot.type = "bubbleplot")
ggscatter(mds.cor, x = "Dim.1", y = "Dim.2",
size = 1,
label = colnames(df_cor),
repel = TRUE)
# K-means clustering
clust <- kmeans(mds.cor, 2)$cluster %>%
as.factor()
mds.clust <- mds.cor %>%
mutate(groups = clust)
# Plot and color by groups
ggscatter(mds.clust, x = "Dim.1", y = "Dim.2",
label = rownames(df_cor),
color = "groups",
palette = "jco",
size = 1,
ellipse = TRUE,
ellipse.type = "convex",
repel = TRUE)
# K-means clustering
clust <- kmeans(mds.cor, 3)$cluster %>%
as.factor()
mds.clust <- mds.cor %>%
mutate(groups = clust)
# Plot and color by groups
ggscatter(mds.clust, x = "Dim.1", y = "Dim.2",
label = rownames(df_cor),
color = "groups",
palette = "jco",
size = 1,
ellipse = TRUE,
ellipse.type = "convex",
repel = TRUE)
# K-means clustering
clust <- kmeans(mds.cor, 4)$cluster %>%
as.factor()
mds.clust <- mds.cor %>%
mutate(groups = clust)
# Plot and color by groups
ggscatter(mds.clust, x = "Dim.1", y = "Dim.2",
label = rownames(df_cor),
color = "groups",
palette = "jco",
size = 1,
ellipse = TRUE,
ellipse.type = "convex",
repel = TRUE)
mds.cor <- (1 - df_cor) %>%
cmdscale() %>% #classical MDS
#isoMDS() %>%
# .$points %>%
as_tibble()
colnames(mds.cor) <- c("Dim.1", "Dim.2")
ggscatter(mds.cor, x = "Dim.1", y = "Dim.2",
size = 1,
label = colnames(df_cor),
repel = TRUE)
# K-means clustering
clust <- kmeans(mds.cor, 4)$cluster %>%
as.factor()
mds.clust <- mds.cor %>%
mutate(groups = clust)
# Plot and color by groups
ggscatter(mds.clust, x = "Dim.1", y = "Dim.2",
label = rownames(df_cor),
color = "groups",
palette = "jco",
size = 1,
ellipse = TRUE,
ellipse.type = "convex",
repel = TRUE)
# Scaled MDS - ratio
df_mds = torgerson(trading,2)
summary(df_mds)
plot(df_mds, plot.type = "bubbleplot")
text(MDS_C_trade[,1],MDS_C_trade[,2],labels=rownames(MDS_C_trade))
# Scaled MDS - ratio
df_mds = torgerson(trading,2)
text(df_mds[,1],df_mds[,2],labels=rownames(df_mds))
# Scaled MDS - ratio
df_mds = torgerson(df,2)
text(df_mds[,1],df_mds[,2],labels=rownames(df_mds))
# seed
set.seed(123)
## Read data frame
df = readRDS("./data/gc.dat")
# correlation matrix
df_cor = cor(df)
# dissimilarities
dissim = sim2diss(df_cor, method = "corr", to.dist = TRUE)
# Scaled MDS - ratio
df_mds = torgerson(df,2)
text(df_mds[,1],df_mds[,2],labels=rownames(df_mds))
summary(df_mds)
plot(df_mds, plot.type = "bubbleplot")
# Scaled MDS - ratio
df_mds = torgerson(df,2)
text(df_mds[,1],df_mds[,2],labels=rownames(df_mds))
## Read data frame
df = readRDS("./data/gc.dat")
# correlation matrix
df_cor = cor(df)
# dissimilarities
dissim = sim2diss(df_cor, method = "corr", to.dist = TRUE)
# Scaled MDS - ratio
df_mds = torgerson(df,2)
summary(df_mds)
plot(df_mds, plot.type = "bubbleplot")
text(df_mds[,1],df_mds[,2],labels=rownames(df_mds))
# Scaled MDS - ratio
df_mds = torgerson(dissim,2)
summary(df_mds)
plot(df_mds, plot.type = "bubbleplot")
text(df_mds[,1],df_mds[,2],labels=rownames(df_mds))
# Plot and color by groups
ggscatter(mds.clust, x = "Dim.1", y = "Dim.2",
label = rownames(df_cor),
color = "groups",
palette = "jco",
size = 1,
ellipse = TRUE,
ellipse.type = "convex",
repel = TRUE)
plot(df_mds)
text(df_mds[,1],df_mds[,2],labels=rownames(df_mds))
mds.cor <- #(1 - df_cor) %>%
dissim %>%
cmdscale() %>% #classical MDS
#isoMDS() %>%
# .$points %>%
as_tibble()
colnames(mds.cor) <- c("Dim.1", "Dim.2")
ggscatter(mds.cor, x = "Dim.1", y = "Dim.2",
size = 1,
label = colnames(df_cor),
repel = TRUE)
# K-means clustering
clust <- kmeans(mds.cor, 4)$cluster %>%
as.factor()
mds.clust <- mds.cor %>%
mutate(groups = clust)
# Plot and color by groups
ggscatter(mds.clust, x = "Dim.1", y = "Dim.2",
label = rownames(df_cor),
color = "groups",
palette = "jco",
size = 1,
ellipse = TRUE,
ellipse.type = "convex",
repel = TRUE)
# K-means clustering
clust <- kmeans(mds.cor, 2)$cluster %>%
as.factor()
mds.clust <- mds.cor %>%
mutate(groups = clust)
# Plot and color by groups
ggscatter(mds.clust, x = "Dim.1", y = "Dim.2",
label = rownames(df_cor),
color = "groups",
palette = "jco",
size = 1,
ellipse = TRUE,
ellipse.type = "convex",
repel = TRUE)
# seed
set.seed(123)
## Read data frame
df = readRDS("./data/gc.dat")
# correlation matrix
df_cor = cor(df)
# dissimilarities
dissim = sim2diss(df_cor, method = "corr", to.dist = TRUE)
mds = #(1 - df_cor) %>%
dissim %>%
cmdscale() #classical MDS
summary(mds)
mds.tb = mds %>%
as_tibble()
colnames(mds.tb) = c("Dim.1", "Dim.2")
ggscatter(mds.tb, x = "Dim.1", y = "Dim.2",
size = 1,
label = colnames(df_cor),
repel = TRUE)
mds
# K-means clustering
clust = kmeans(mds.tb, 2)$cluster %>%
as.factor()
mds.clust = mds.tb %>%
mutate(groups = clust)
# Plot and color by groups
ggscatter(mds.clust, x = "Dim.1", y = "Dim.2",
label = rownames(df_cor),
color = "groups",
palette = "jco",
size = 1,
ellipse = TRUE,
ellipse.type = "convex",
repel = TRUE)
# There are different types of MDS algorithms, including
# There are different types of MDS algorithms, including
#
# There are different types of MDS algorithms, including
#
# Classical multidimensional scaling
# Plot and color by groups
ggplot(mds.clust, aes(x=Dim.1, y=Dim.2)) +
geom_point(size=2, shape=23)
# Plot and color by groups
ggplot(mds.clust, aes(x=Dim.1, y=Dim.2)) +
geom_point()
color=groups)) +
geom_point()+
geom_text(label = rownames(df_cor))
# Plot and color by groups
ggplot(mds.clust, aes(x=Dim.1, y=Dim.2, color=groups)) +
geom_point()+
geom_text(label = rownames(df_cor))
# Plot and color by groups
ggplot(mds.clust, aes(x=Dim.1, y=Dim.2, color=groups)) +
geom_point()+
geom_text(label = rownames(df_cor), hjust = 0.67)
# Plot and color by groups
ggplot(mds.clust, aes(x=Dim.1, y=Dim.2, color=groups)) +
geom_point()+
geom_text(label = rownames(df_cor))
ggscatter(mds.clust, x = "Dim.1", y = "Dim.2",
label = rownames(df_cor),
color = "groups",
palette = "jco",
size = 1,
ellipse = TRUE,
ellipse.type = "convex",
repel = TRUE)
# Plot and color by groups
ggscatter(mds.clust, x = "Dim.1", y = "Dim.2",
label = rownames(df_cor),
color = "groups",
palette = "jco",
size = 1,
ellipse = TRUE,
ellipse.type = "convex",
repel = TRUE)
# Plot and color by groups
g = ggscatter(mds.clust, x = "Dim.1", y = "Dim.2",
label = rownames(df_cor),
color = "groups",
palette = "jco",
size = 1,
ellipse = TRUE,
ellipse.type = "convex",
repel = TRUE)
g
ggexport("msd_clust.png", g)
ggexport("msd_clust.png")
g %>% ggexport("msd_clust.png")
# Plot and color by groups
g = ggscatter(mds.clust, x = "Dim.1", y = "Dim.2",
label = rownames(df_cor),
color = "groups",
palette = "jco",
size = 1,
ellipse = TRUE,
ellipse.type = "convex",
repel = TRUE,
title = "Classical MDS")
g %>% ggexport("msd_clust.png")
g %>% ggexport(filename="msd_clust.png")
