#png("dyn_pca_graph_var_dim14.png")
plot(pca, axes = c(1,4), choix = c("var"), col.var="black")
## correlations variables - dimensions/PC
pca$var$cor
## Contributions
pca$var$contrib
## coordinates of the individuals
## which ones are more extreme in each PC
pca$ind$coord
#png("dyn_pca_graph_ind_dim12.png")
plot(pca, axes = c(1,2), choix = c("ind","var","varcor"), col.var="black")
#dev.off()
#png("dyn_pca_graph_ind_dim13.png")
plot(pca, axes = c(1,3), choix = c("ind","var","varcor"), col.var="black")
#dev.off()
#png("dyn_pca_graph_ind_dim15.png")
plot(pca, axes = c(1,4), choix = c("ind","var","varcor"), col.var="black")
#dev.off()
#png("dyn_pca_graph_ind_dim15.png")
plot(pca, axes = c(1,5), choix = c("ind","var","varcor"), col.var="black")
## Contributions
## the more extreme will have the higher contribution
pca$ind$contrib
#dev.off()
#png("dyn_pca_graph_ind_dim12_contr5.png")
plot(pca, axes = c(1,2), select="contrib 5") # plot the 5 individuals with the highest contribution
#dev.off()
#png("dyn_pca_graph_ind_dim13_contr5.png")
plot(pca, axes = c(1,3), select="contrib 5") # plot the 5 individuals with the highest contribution
#dev.off()
#png("dyn_pca_graph_ind_dim14_contr5.png")
plot(pca, axes = c(1,4), select="contrib 5") # plot the 5 individuals with the highest contribution
#dev.off()
#png("dyn_pca_graph_ind_dim15_contr5.png")
plot(pca, axes = c(1,5), select="contrib 5") # plot the 5 individuals with the highest contribution
pca$ind$contrib[c(5,6,13,20,63,110),]
## quality of representation - cos2
pca$ind$cos2
png("dyn_pca_graph_ind_dim12_cos0.8.png")
plot(pca, axes = c(1,2), select="cos2 0.8")  # plot the individuals with cos2 greater than 0.8
dev.off()
png("dyn_pca_graph_ind_dim13_cos0.8.png")
plot(pca, axes = c(1,3), select="cos2 0.8")  # plot the individuals with cos2 greater than 0.8
dev.off()
png("dyn_pca_graph_ind_dim14_cos0.8.png")
plot(pca, axes = c(1,4), select="cos2 0.8")  # plot the individuals with cos2 greater than 0.8
dev.off()
ggplot(dat.num[c(5,6,13,63,67,68),], aes(x=gal.long, y=gal.lat))+
geom_point()+
geom_point(shape=21,x=0,y=0, size=5)+
geom_hline(yintercept=0)+
labs(title="Distribution of globular clusters through space",
x="longitude",
y="latitude")
g
ggplot(df[c(5,6,13,63,67,68),], aes(x=gal.long, y=gal.lat))+
geom_hline(yintercept=0)+
geom_point()+
geom_text(aes(label=c("5","6","13","19","22")),hjust=0, vjust=0)+
geom_point(x=0,y=0, shape=21, size=5)+
lims(y=c(-3,2.8), x=c(-1.1,1.25))+
labs(title="Distribution of globular clusters through space",
x="longitude",
y="latitude")
ggplot(dat.num[c(5,6,13,63,67,68),], aes(x=gal.long, y=gal.lat))+
geom_hline(yintercept=0)+
geom_point()+
geom_text(aes(label=c("5","6","13","19","22")),hjust=0, vjust=0)+
geom_point(x=0,y=0, shape=21, size=5)+
lims(y=c(-3,2.8), x=c(-1.1,1.25))+
labs(title="Distribution of globular clusters through space",
x="longitude",
y="latitude")
ggplot(dat.num[c(5,6,13,63,67,68),], aes(x=gal.long, y=gal.lat))+
geom_hline(yintercept=0)+
geom_point()+
geom_text(aes(label=c("5","6","13","19","22")),hjust=0, vjust=0)+
geom_point(x=0,y=0, shape=21, size=5)+
lims(y=c(-3,2.8), x=c(-1.1,1.25))+
labs(title="Distribution of globular clusters through space",
x="longitude",
y="latitude")
ggplot(dat.num[c(5,6,13,63,67,68),], aes(x=gal.long, y=gal.lat))+
geom_hline(yintercept=0)+
geom_point()+
geom_text(aes(label=c("5","6","13","63","67","68")),hjust=0, vjust=0)+
geom_point(x=0,y=0, shape=21, size=5)+
lims(y=c(-3,2.8), x=c(-1.1,1.25))+
labs(title="Distribution of globular clusters through space",
x="longitude",
y="latitude")
# extreme in Dim 2
ggplot(dat.num[c(7, 19, 21, 62, 95),], aes(x=gal.long, y=gal.lat))+
geom_hline(yintercept=0)+
geom_point()+
geom_text(aes(label=c("7","19","21","62","95")),hjust=0, vjust=0)+
geom_point(x=0,y=0, shape=21, size=5)+
lims(y=c(-3,2.8), x=c(-1.1,1.25))+
labs(title="Distribution of globular clusters through space",
x="longitude",
y="latitude")
ggscatter(
mds.classic,
label= rownames(mds.classic),
main= "Classic MDS",
x= "Dim1", y= "Dim2",
xlab= "Dimension 1", ylab= "Dimension 2",
size= 1,
repel= T,
ggtheme= theme_bw()
)
## quality of representation - cos2
pca$ind$cos2
## quality of representation - cos2
pca$ind$cos2[c(5,6,13,19,22),]
## Read data frame
df = readRDS("./data/dynamics.dat")
# View(df)
# dim(df)
# str(df)
summary(df)
## PCA
pca = PCA(df)
## Eigenvalues
pca$eig
## easier to see the "elbow"
#png("dyn_eigen_barplot.png")
barplot(pca$eig[,1],
main="Eigenvalues",
names.arg=1:nrow(pca$eig))
## Interpretation - In regard of the variables
#png("dyn_pca_graph_var_dim12.png")
plot(pca, axes = c(1,2), choix = c("var"), col.var="black")
#dev.off()
#png("dyn_pca_graph_var_dim13.png")
plot(pca, axes = c(1,3), choix = c("var"), col.var="black")
#dev.off()
#png("dyn_pca_graph_var_dim14.png")
plot(pca, axes = c(1,4), choix = c("var"), col.var="black")
## correlations variables - dimensions/PC
pca$var$cor
## Contributions
pca$var$contrib
## coordinates of the individuals
## which ones are more extreme in each PC
pca$ind$coord
#png("dyn_pca_graph_ind_dim12.png")
plot(pca, axes = c(1,2), choix = c("ind","var","varcor"), col.var="black")
#dev.off()
#png("dyn_pca_graph_ind_dim13.png")
plot(pca, axes = c(1,3), choix = c("ind","var","varcor"), col.var="black")
#dev.off()
#png("dyn_pca_graph_ind_dim15.png")
plot(pca, axes = c(1,4), choix = c("ind","var","varcor"), col.var="black")
#dev.off()
#png("dyn_pca_graph_ind_dim15.png")
plot(pca, axes = c(1,5), choix = c("ind","var","varcor"), col.var="black")
## Contributions
## the more extreme will have the higher contribution
pca$ind$contrib
#dev.off()
#png("dyn_pca_graph_ind_dim12_contr5.png")
plot(pca, axes = c(1,2), select="contrib 5") # plot the 5 individuals with the highest contribution
#dev.off()
#png("dyn_pca_graph_ind_dim13_contr5.png")
plot(pca, axes = c(1,3), select="contrib 5") # plot the 5 individuals with the highest contribution
#dev.off()
#png("dyn_pca_graph_ind_dim14_contr5.png")
plot(pca, axes = c(1,4), select="contrib 5") # plot the 5 individuals with the highest contribution
#dev.off()
#png("dyn_pca_graph_ind_dim15_contr5.png")
plot(pca, axes = c(1,5), select="contrib 5") # plot the 5 individuals with the highest contribution
pca$ind$contrib[c(5,6,13,20,63,110),]
## quality of representation - cos2
pca$ind$cos2
length(which(pca$ind$cos2>0.8))/111
## Read data frame
df = readRDS("./data/dynamics.dat")
dim(df)
length(which(pca$ind$cos2>0.8))/111
lapply(pca$ind$cos2[c(5,6,13,20,63,110),], sum)
lapply(pca$ind$cos2[c(5,6,13,20,63,110), 1:2], sum)
lapply(pca$ind$cos2[c(5), 1:2], sum)
sum(pca$ind$cos2[c(5), 1:2])
sum(pca$ind$cos2[c(5), 1:4])
sum(pca$ind$cos2[c(6), 1:4])
sum(pca$ind$cos2[c(13), 1:4])
sum(pca$ind$cos2[c(20), 1:4])
sum(pca$ind$cos2[c(63), 1:4])
sum(pca$ind$cos2[c(110), 1:4])
dat.num= readRDS("./data/gc.dat")
dim(dat.num)
# packages ----------------------------------------------------------------
require(ggpubr)
require(smacof)
require(tidyverse)
# data sets ---------------------------------------------------------------
dat.dyn= readRDS("./data/dynamics.dat")
dat.loc= readRDS("./data/location.dat")
dat.num= readRDS("./data/gc.dat")
# mds ---------------------------------------------------------------------
# dissimilarity matrix
diss.num= dist(dat.num)
# classic mds
mds.classic.num= torgerson(diss.num, 2)
plot(
mds.classic.num,
pch= 20,
xlab= "",
yaxt= 'n', ylab= ""
)
title(main= "Classic MDS", line= 0.2)
title(xlab= "Dimension 1", line= 2)
title(ylab= "Dimension 2", line= 2.2)
axis(2, las= 2)
text(mds.classic.num, labels= rownames(mds.classic.num), pos= 2)
# scaled mds (interval)
mds.scaled.interv.num= mds(diss.num, type= "interval")
mds.scaled.interv.num
# coordinates and stress per unit
summary(mds.scaled.interv.num)
plot(
mds.scaled.interv.num,
plot.type= "stressplot",
xlab= "",
ylab= "", yaxt= 'n',
main= ""
)
title(main= "Stress Decomposition Chart", line= 0.4)
title(xlab= "Objects", line= 2.2)
axis(2, las= 2)
title(ylab= "Stress Proportion (%)", line= 2.4)
# packages ----------------------------------------------------------------
require(GGally)
require(latex2exp)
require(psych)
require(tidyverse)
library(FactoMineR)
library(ggpubr)
# functions ---------------------------------------------------------------
plot_loadings = function(l, label){
names(l) = c("RC1", "RC2")
ggscatter(l, x = "RC1", y = "RC2",
size = 1,
label = label,
repel = TRUE,
title = "Factor Analysis - graph of variables")
}
# data sets ---------------------------------------------------------------
dat.loc= readRDS("./data/location.dat")
dat.dyn= readRDS("./data/dynamics.dat")
dat.num= readRDS("./data/gc.dat")
# variables ---------------------------------------------------------------
var.units= c(
TeX("$\\textbf{gal.long}$ ($\\degree$)"),
TeX("$\\textbf{gal.lat}$ ($\\degree$)"),
TeX("$\\textbf{r.sol}$ (kpc)"),
TeX("$\\textbf{r.gc}$ (kpc)"),
TeX("$\\textbf{metal}$"),
TeX("$\\textbf{mv}$ (mag)"),
TeX("$\\textbf{r.core}$ (pc)"),
TeX("$\\textbf{r.tidal} (pc)"),
TeX("$\\textbf{conc}$"),
TeX("$\\textbf{log.t}$ (yr)"),
TeX("$\\textbf{log.rho}$ ($M_{sun}/pc^3$)"),
TeX("$\\textbf{s0}$ (km/s)"),
TeX("$\\textbf{v.esc}$ (km/s)"),
TeX("$\\textbf{vhb}$ (mag)"),
TeX("$\\textbf{e.bv} (mag)"),
TeX("$\\textbf{bv}$ (mag)"),
TeX("$\\textbf{ellipt}$"),
TeX("$\\textbf{v.t} (mag)"),
TeX("$\\textbf{csb}$ ($mag/arcsec^2$)")
)
# correlations ------------------------------------------------------------
dat.num.corr= cor(dat.num)
# all variables
dat.num %>%
ggcorr(
geom= "blank",
label= T,
hjust= 0.55
) +
geom_point(
size= 10,
aes(
colour= coefficient > 0,
alpha= abs(coefficient) > 0.5
)
) +
scale_alpha_manual(values= c("TRUE"= 0.25, "FALSE"= 0)) +
guides(
colour= F,
alpha= F
)
dat= dat.num[, -c(1, 2, 18)]
dat.corr= cor(dat)
# all variables except v.t (18), gal.lat (2), and gal.long(1)
dat %>%
ggcorr(
geom= "blank",
label= T,
hjust= 0.75
) +
geom_point(
size= 10,
aes(
colour= coefficient > 0,
alpha= abs(coefficient) > 0.5
)
) +
scale_alpha_manual(values= c("TRUE"= 0.25, "FALSE"= 0)) +
guides(
colour= F,
alpha= F
)
# kmo ---------------------------------------------------------------------
# analyse goodness-of-fit test of the model
KMO(dat.corr)
# factor analysis model extraction ----------------------------------------
pca = PCA(dat)
pca$eig
# extract principal components (model with five common factors)
dat.pcs= principal(dat.corr, 4, rotate= "varimax")
# communalities with a five common factors model
dat.pcs$communality
# rotated components
dat.pcs$loadings
print(dat.pcs$loadings,cutoff = 0.6)
# packages ----------------------------------------------------------------
require(FactoMineR)
require(GGally)
require(latex2exp)
require(lattice)
require(tidyverse)
# data sets ---------------------------------------------------------------
dat.loc= readRDS("./data/location.dat")
dat.dyn= readRDS("./data/dynamics.dat")
dat.num= readRDS("./data/gc.dat")
# variables ---------------------------------------------------------------
var.units= c(
TeX("$\\textbf{gal.long}$ ($\\degree$)"),
TeX("$\\textbf{gal.lat}$ ($\\degree$)"),
TeX("$\\textbf{r.sol}$ (kpc)"),
TeX("$\\textbf{r.gc}$ (kpc)"),
TeX("$\\textbf{metal}$"),
TeX("$\\textbf{mv}$ (mag)"),
TeX("$\\textbf{r.core}$ (pc)"),
TeX("$\\textbf{r.tidal} (pc)"),
TeX("$\\textbf{conc}$"),
TeX("$\\textbf{log.t}$ (yr)"),
TeX("$\\textbf{log.rho}$ ($M_{sun}/pc^3$)"),
TeX("$\\textbf{s0}$ (km/s)"),
TeX("$\\textbf{v.esc}$ (km/s)"),
TeX("$\\textbf{vhb}$ (mag)"),
TeX("$\\textbf{e.bv} (mag)"),
TeX("$\\textbf{bv}$ (mag)"),
TeX("$\\textbf{ellipt}$"),
TeX("$\\textbf{v.t} (mag)"),
TeX("$\\textbf{csb}$ ($mag/arcsec^2$)")
)
# principal component analysis --------------------------------------------
pca.tot= PCA(dat.num)
pca.dyn= PCA(dat.dyn)
pca.loc= PCA(dat.loc)
# eigenvectors ------------------------------------------------------------
## all numeric variables
pca.tot$svd$V
# eigenvectors ------------------------------------------------------------
## all numeric variables
pca.tot$svd$V
## dynamic variables
pca.dyn$var
## Read data frame
#df = readRDS("./data/location.dat")
df = readRDS("./data/gc.dat")
# View(df)
# dim(df)
# str(df)
summary(df)
## PCA
pca = PCA(df)
## Eigenvalues
pca$eig
## Eigenvalues
pca$eig
## easier to see the "elbow"
#png("loc_eigen_barplot.png")
barplot(pca$eig[,1],
main="Eigenvalues",
names.arg=1:nrow(pca$eig))
## easier to see the "elbow"
png("pca_tot_eigen_barplot.png")
barplot(pca$eig[,1],
main="Eigenvalues",
names.arg=1:nrow(pca$eig))
dev.off()
## Interpretation - In regard of the variables
#png("loc_pca_graph_var_dim12.png")
plot(pca, axes = c(1,2), choix = c("var"), col.var="black")
## Interpretation - In regard of the variables
png("pca_tot_graph_var_dim12.png")
plot(pca, axes = c(1,2), choix = c("var"), col.var="black")
dev.off()
## correlations variables - dimensions/PC
pca$var$cor
## Interpretation - In regard of the individuals
g = ggplot(df, aes(x=gal.long, y=gal.lat))+
geom_point()+
geom_point(shape=21,x=0,y=0, size=5)+
geom_hline(yintercept=0)+
labs(title="Distribution of globular clusters through space",
x="longitude",
y="latitude")
g
#png("loc_pca_graph_ind_dim12.png")
plot(pca, axes = c(1,2), choix = c("ind","var","varcor"), col.var="black")
png("pca_tot_graph_ind_dim12.png")
plot(pca, axes = c(1,2), choix = c("ind","var","varcor"), col.var="black")
dev.off()
#png("loc_pca_graph_ind_dim12_contr5.png")
plot(pca, axes = c(1,2), select="contrib 5") # plot the 5 individuals with the highest contribution
## Eigenvectors
pca$svd$V
## libraries
library(FactoMineR)
library(ggplot2)
set.seed(123)
## Read data frame
df = readRDS("./data/dynamics.dat")
# View(df)
# dim(df)
# str(df)
summary(df)
## PCA
pca = PCA(df)
## Eigenvalues
pca$eig
## easier to see the "elbow"
#png("dyn_eigen_barplot.png")
barplot(pca$eig[,1],
main="Eigenvalues",
names.arg=1:nrow(pca$eig))
## Interpretation - In regard of the variables
#png("dyn_pca_graph_var_dim12.png")
plot(pca, axes = c(1,2), choix = c("var"), col.var="black")
#dev.off()
#png("dyn_pca_graph_var_dim13.png")
plot(pca, axes = c(1,3), choix = c("var"), col.var="black")
#dev.off()
#png("dyn_pca_graph_var_dim14.png")
plot(pca, axes = c(1,4), choix = c("var"), col.var="black")
## correlations variables - dimensions/PC
pca$var$cor
## Contributions
pca$var$contrib
## coordinates of the individuals
## which ones are more extreme in each PC
pca$ind$coord
#png("dyn_pca_graph_ind_dim12.png")
plot(pca, axes = c(1,2), choix = c("ind","var","varcor"), col.var="black")
#dev.off()
#png("dyn_pca_graph_ind_dim13.png")
plot(pca, axes = c(1,3), choix = c("ind","var","varcor"), col.var="black")
#dev.off()
#png("dyn_pca_graph_ind_dim15.png")
plot(pca, axes = c(1,4), choix = c("ind","var","varcor"), col.var="black")
#dev.off()
#png("dyn_pca_graph_ind_dim15.png")
plot(pca, axes = c(1,5), choix = c("ind","var","varcor"), col.var="black")
## Contributions
## the more extreme will have the higher contribution
pca$ind$contrib
#dev.off()
#png("dyn_pca_graph_ind_dim12_contr5.png")
plot(pca, axes = c(1,2), select="contrib 5") # plot the 5 individuals with the highest contribution
#dev.off()
#png("dyn_pca_graph_ind_dim13_contr5.png")
plot(pca, axes = c(1,3), select="contrib 5") # plot the 5 individuals with the highest contribution
#dev.off()
#png("dyn_pca_graph_ind_dim14_contr5.png")
plot(pca, axes = c(1,4), select="contrib 5") # plot the 5 individuals with the highest contribution
#dev.off()
#png("dyn_pca_graph_ind_dim15_contr5.png")
plot(pca, axes = c(1,5), select="contrib 5") # plot the 5 individuals with the highest contribution
pca$ind$contrib[c(5,6,13,20,63,110),]
#dev.off()
png("dyn_pca_graph_ind_dim12_contr5.png")
plot(pca, axes = c(1,2), select="contrib 5") # plot the 5 individuals with the highest contribution
dev.off()
png("dyn_pca_graph_ind_dim13_contr5.png")
plot(pca, axes = c(1,3), select="contrib 5") # plot the 5 individuals with the highest contribution
dev.off()
png("dyn_pca_graph_ind_dim14_contr5.png")
plot(pca, axes = c(1,4), select="contrib 5") # plot the 5 individuals with the highest contribution
dev.off()
png("dyn_pca_graph_ind_dim15_contr5.png")
plot(pca, axes = c(1,5), select="contrib 5") # plot the 5 individuals with the highest contribution
dev.off()
png("dyn_pca_graph_ind_dim12_cos0.8.png")
plot(pca, axes = c(1,2), select="cos2 0.8")  # plot the individuals with cos2 greater than 0.8
dev.off()
png("dyn_pca_graph_ind_dim13_cos0.8.png")
plot(pca, axes = c(1,3), select="cos2 0.8")  # plot the individuals with cos2 greater than 0.8
dev.off()
png("dyn_pca_graph_ind_dim14_cos0.8.png")
plot(pca, axes = c(1,4), select="cos2 0.8")  # plot the individuals with cos2 greater than 0.8
dev.off()
#dev.off()
png("dyn_pca_graph_ind_dim12_contr5.png")
plot(pca, axes = c(1,2), select="contrib 5") # plot the 5 individuals with the highest contribution
dev.off()
